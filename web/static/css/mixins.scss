//http://codepen.io/sawmac/pen/rjHFd

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -moz-box-shadow: inset $top $left $blur $color;
    -ms-box-shadow: inset $top $left $blur $color;
    -webkit-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  } @else {
    -moz-box-shadow: $top $left $blur $color;
    -ms-box-shadow: $top $left $blur $color;
    -webkit-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin text-field {
  display: inline-block;
  outline: none;
  text-decoration: none;
  font: 14px/100% Arial, Helvetica, sans-serif;
  padding: .5em;
  text-shadow: 0 1px 1px rgba(0, 0 , 0, .3);
  @include rounded();
  @include box-shadow(0, 1px, 2px, rgba(0, 0, 0, .2));
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }

  -moz-animation: $animations;
  -ms-animation: $animations;
  -o-animation: $animations;
  -webkit-animation: $animations;
  animation: $animations;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}



//animation-timing-function: linear|ease|ease-in|ease-out|cubic-bezier(n,n,n,n)|initial|inherit;
@mixin animation-timing-function($timing...) {
  -o-animation-timing-function: $timing;
  -moz-animation-timing-function: $timing;
  -ms-animation-timing-function: $timing;
  -webkit-animation-timing-function: $timing;
  animation-timing-function: $timing;
}
// http://codepen.io/sawmac/pen/qGudy
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin transition($transforms) {
  -moz-transition: $transforms;
  -o-transition: $transforms;
  -ms-transition: $transforms;
  -webkit-transition: $transforms;
  transition: $transforms;
}

@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

@mixin translate-rotate($x, $y, $deg) {
  @include transform(translate($x, $y) rotate(#{$deg}deg));
}

@mixin scale-rotate($scale, $deg) {
  @include transform(scale($scale) rotate(#{$deg}deg));
}


//z,y,x,deg
//rotate3d(1, 0, 0, 50deg)
// not working??
@mixin translate-scale($x, $y, $scale) {
  @include transform(translate($x, $y) scale($scale));
}

@mixin scale($scale) {
  @include transform(scale($scale));
}


@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}

@mixin transform-origin ($origin) {
  -o-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}


@mixin gradient($from, $to) {
  background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background: -moz-linear-gradient(top, $from, $to);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

@mixin rounded($radius: .5em) {
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

@mixin button($color: $red, $text-color: $white) {
  display: inline-block;
  outline: none;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  font: 14px/100% Arial, Helvetica, sans-serif;
  padding: .5em 2em .55em;
  text-shadow: 0 1px 1px rgba(0, 0, 0, .3);
  @include rounded();
  @include box-shadow(0, 1px, 2px, rgba(0, 0, 0, .2));

  color: $text-color !important;
  font-weight: bold;
  border: solid 1px darken($color, 18%);
  background: $color;
  @include gradient(saturate($color, 15%), darken($color, 15%));

  &:hover {
    background: saturate($color, 10%);
    text-decoration: none;
    @include gradient(saturate($color, 5%), darken($color, 5%));
  }

  &:active {
    color: saturate($color, 15%);
    @include gradient(saturate($color, 15%), lighten($color, 15%));
    position: relative;
    top: 1px;
  }

}
